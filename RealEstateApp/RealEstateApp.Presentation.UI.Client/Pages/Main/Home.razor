@page "/"
@using RealEstateApp.Application.DTOs
@using RealEstateApp.Presentation.UI.Client.Data
@layout UserLayout
@inject NavigationManager Navigation
@inject EstateService EstateService

<PageTitle>Real Estate Agency</PageTitle>

<!-- Hero Section -->
<section id="hero" class="hero-section text-center bg-primary text-white py-5">
    <div class="container">
        <h1 class="hero-title display-4 fw-bold">Find Your Dream Home</h1>
        <p class="hero-subtitle lead">Discover the best properties suited to your needs.</p>
        <form class="search-form d-flex justify-content-center" onsubmit="return false;">
            <input type="text" class="form-control mx-2" placeholder="Enter location, property type..." @bind="SearchTerm" />
            <select class="form-select mx-2" @bind="SelectedCategory">
                <option value="">All Categories</option>
                @foreach (var category in Categories)
                {
                    <option value="@category.Title">@category.Title</option>
                }
            </select>
            <button type="button" class="btn btn-light mx-2" @onclick="SearchProperties">Search</button>
        </form>
    </div>
</section>

<!-- Featured Properties Section -->
<section id="featured-properties" class="featured-section py-5">
    <div class="container">
        <h2 class="section-title text-center mb-4">Featured Properties</h2>
        @if (FilteredProperties == null)
        {
            <p class="text-center">Loading...</p>
        }
        else if (!FilteredProperties.Any())
        {
            <p class="text-center text-muted alert alert-danger">No matching properties found. Please try a different search.</p>
        }
        else
        {
            <div class="row">
                @foreach (var property in FilteredProperties)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="property-card border rounded shadow-sm">
                            <div class="property-image-container position-relative">
                                <img src="data:image/png;base64,@property.Image" alt="@property.Title" class="w-100 rounded-top property-image" />
                                <span class="property-type position-absolute top-0 end-0 m-2 bg-dark text-white px-2 py-1 rounded">@property.Description</span>
                            </div>
                            <div class="property-info p-3">
                                <h3 class="property-title">@property.Title</h3>
                                <p><i class="bi bi-geo-alt"></i> @property.Address</p>
                                <p class="price fw-bold text-primary">$@string.Format("{0:N0}", property.Price)</p>
                                <div class="property-details mb-3">
                                    <span><i class="bi bi-arrows-move"></i> @property.Metrage m²</span>
                                    <span><i class="bi bi-house-door"></i> @property.CategoryName</span>
                                </div>
                                <button class="btn btn-outline-primary w-100" @onclick="() => NavigateToProperty(property.Id)">
                                    <i class="bi bi-eye"></i> View Details
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>
<style>
    /* Hero Section */
    #hero {
        background: linear-gradient(to right, #0062cc, #004085);
  ;
    }

    .hero-title {
        font-size: 4rem;
        font-weight: 700;
        margin-bottom: 20px;
        transition: transform 0.3s ease;
    
    }

        .hero-title:hover {
            transform: scale(1.1);
        }

    .hero-subtitle {
        font-size: 1.5rem;
        font-weight: 400;
    }

    /* Featured Properties Section */
    .property-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .property-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .property-image-container img {
        transition: transform 0.3s ease;
    }

        .property-image-container img:hover {
            transform: scale(1.05);
        }

    .property-info {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        transition: transform 0.3s ease;
    }

        .property-info:hover {
            transform: translateY(-5px);
        }

    .property-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #333;
    }

    .property-details span {
        display: inline-block;
        margin-right: 15px;
        color: #888;
        font-size: 0.9rem;
    }

    .price {
        color: #007bff;
        font-size: 1.25rem;
        font-weight: 700;
    }

    .property-type {
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        font-size: 0.9rem;
        padding: 5px 10px;
        border-radius: 5px;
    }

    /* Button Hover Effect */
    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
        }

    /* Search Form */
    .search-form input,
    .search-form select,
    .search-form button {
        border-radius: 50px;
        padding: 12px 20px;
    }

    .search-form input,
    .search-form select {
        border: 1px solid #007bff;
    }

    .search-form button {
        background-color: #007bff;
        border: 1px solid #007bff;
        color: white;
        transition: background-color 0.3s ease;
    }

        .search-form button:hover {
            background-color: #0056b3;
        }

    /* Loading State */
    .text-center.alert-danger {
        font-size: 1.2rem;
        color: #dc3545;
    }

</style>
@code {
    private List<EstateDto> FeaturedProperties;
    private List<EstateDto> FilteredProperties;
    private List<CategoryDto> Categories = new List<CategoryDto>();
    private string SearchTerm = "";
    private string SelectedCategory = "";

    protected override async Task OnInitializedAsync()
    {
        // دریافت املاک و دسته‌بندی‌ها
        FeaturedProperties = (await EstateService.GetAllEstatesAsync()).ToList();
        Categories = (await EstateService.GetCategoriesAsync()).ToList();
        FilteredProperties = FeaturedProperties; // نمایش تمام املاک به طور پیش‌فرض
    }

    private void SearchProperties()
    {
        // فیلتر کردن املاک بر اساس کلمه جستجو و دسته‌بندی انتخابی
        FilteredProperties = FeaturedProperties
            .Where(p => (string.IsNullOrEmpty(SearchTerm) || p.Title.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase) || p.Address.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase)) &&
                        (string.IsNullOrEmpty(SelectedCategory) || p.CategoryName.Equals(SelectedCategory, StringComparison.OrdinalIgnoreCase)))
            .ToList();
    }

    private void NavigateToProperty(int id)
    {
        Navigation.NavigateTo($"/property/{id}");
    }
}
